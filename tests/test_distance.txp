(* PACKAGE fonts *)
(*
  Copyright Florian Hatat, Tom Hirschowitz, Pierre Hyvernat,
  Pierre-Etienne Meunier, Christophe Raffalli, Guillaume Theyssier 2012.

  This file is part of Patoline.

  Patoline is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Patoline is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Patoline.  If not, see <http://www.gnu.org/licenses/>.
*)
\Caml(
open Diagrams
open Typography.Distance
open Typography
open Document
open Document.Mathematical
open Maths
open Patfonts
open FTypes
open Distance

let _ = Sys.catch_break true; Printexc.record_backtrace true
)

== Test du calcul du profile ==

\Caml(

let _ = Distance.debug := false
   let _ = Distance.debug_mediatrice := false

let get_char env c =
    let x=Fonts.loadGlyph (Lazy.force env.mathsEnvironment.(0).mathsFont)
      ({empty_glyph with glyph_index=Fonts.glyph_of_char
	  (Lazy.force env.mathsEnvironment.(0).mathsFont) c})
    in
    List.flatten (Fonts.outlines x)

let mkEdge ?col ?fil path profile =
  let first = let x, y = List.hd profile in x/.100.,y/.100. in
  let profile = List.map (fun (x,y) -> 
    [x/.100.,y/.100.]) (List.tl profile) in
  path Edge.([draw;paramsOf{default_params with close=false; fillColor=fil; strokingColor=col}]) first profile

let profile dirs c=<<

\diagram(
let curves = get_char env c
let profile = bezier_profile dirs 3.0 curves
let _ = mkEdge ?col:(Some red) path profile
) >>

let dirRight = ((-1.0,1.0),(-1.0,-1.0))
let dirLeft = ((1.0,-1.0),(1.0,1.0))
let rightProfile = profile dirRight
let leftProfile =profile dirLeft

let profiles c = << \leftProfile(c) \rightProfile(c) \hspace(0.5) >>
)


\profiles('X')  \profiles('O') \profiles('A') \profiles('C')
\profiles('P') P \profiles('G') G \profiles('Q') \profiles('S') \profiles('V')

== test de la mediatrice ==

\Caml(
let mediatrice env path c1 space c2 =
  let c1 = get_char env c1 and c2 = get_char env c2 in
  let p1 = bezier_profile dirRight 3.0 c1 in
  let p2 = bezier_profile dirLeft 3.0 c2 in
  let p2 = List.map (fun (x,y) -> (x+.space,y)) p2 in

  let _ = mkEdge path p1 in
  let _ = mkEdge path p2 in
  let b = mediatrice_profile dirRight p1 p2 in
  let rec fn = function
    | (x,i,y)::((x',i',y')::_ as l) -> (
      try
	let col = 
	  match norm (x -- x') < 1e-8, norm (i -- i') < 1e-8, norm (y -- y') < 1e-8 with
	    true, true, true -> raise Exit
	  | _, true, _ -> red
	  | true, _, true -> black
	  | true, _, _ | _, _, true -> blue
	  | _ -> green
	in
	mkEdge ?col:None ?fil:(Some col) path [x;x';y';y;x];
	mkEdge ?col:(Some red) path [i;i'];
	fn l
      with Exit -> fn l)
    | _ -> ()
  in
	    
	    
  let _ = fn b in

  ()
)
(*
\diagram(
  let _ = mediatrice env path 'X' 600.0 'O'
)
*)
\Caml(

let mediatrice2 env path f p1 p2 =

  let p1 = List.map (fun (x, y) -> x *. f, y *. f) p1 in
  let p2 = List.map (fun (x, y) -> x *. f, y *. f) p2 in
  try 
    let b = mediatrice_profile dirRight p1 p2 in
    let todo = ref [] in
    let rec fn = function
    (x,i,y)::((x',i',y')::_ as l) -> (
      try
	let col = 
	  match norm (x -- x') < 1e-8, norm (i -- i') < 1e-8, norm (y -- y') < 1e-8 with
	    true, true, true -> raise Exit
	  | _, true, _ -> red
	  | true, _, true -> black
	  | true, _, _ | _, _, true -> blue
	  | _ -> green
	in
	mkEdge ?col:None ?fil:(Some (mix 0.8 white col)) path [x;x';y';y;x];
	todo := (fun () -> mkEdge ?col:(Some col) path [i;i'])::!todo;
	fn l
      with Exit -> fn l)
      | _ -> ()
    in
	    
	    
    let _ = fn b in
    let _ = List.iter (fun f -> ignore (f ())) !todo in
    ()
  with
    e -> 
      Printf.fprintf stderr "%s\n" (Printexc.to_string e);
      mkEdge ?col:(Some red) path p1;
      mkEdge ?col:(Some red) path p2;
      ()
      
)

Simple:
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(0.0,0.0);(0.0,2.0)] [(1.0,1.0)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(0.0,1.0)] [(1.0,2.0);(1.0,0.0)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(0.0,0.0);(0.0,2.0)] [(1.25,1.25);(1.25,0.75)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(0.,2.);(1.,3.)] [(2.,3.);(2.,1.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(1.,3.)] [(2.,3.);(3.,2.);(2.,1.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(0.5,2.);(1.,3.)] [(2.,3.);(2.,1.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(1.,3.)] [(2.,3.);(2.5,2.);(2.,1.)]
)


\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(0.1,2.);(1.,3.)] [(2.,3.);(3.,2.);(2.,1.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(0.,2.);(1.,3.)] [(2.,3.);(2.9,2.);(2.,1.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,1.0);(0.,2.);(1.,3.)] [(2.,3.);(3.0,2.);(2.,1.)]
)


\vspaceBefore(6.0)
Medium:
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. (List.rev [(-.1.5,2.0);(-.2.,1.);(-.1.,0.)]) [(-.2.0,4.0)] 
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. (List.rev [(-.1.5,1.5);(-.2.,1.);(-.1.,0.)]) [(-.2.0,4.0)] 
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(2.0,4.0)]  [(1.5,2.0);(2.,1.);(1.,0.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(2.0,4.0)]  [(1.5,1.5);(2.,1.);(1.,0.)]
)
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200. [(1.0,0.0);(0.0,1.0);(0.0,1.4);(0.2,1.8)]  [(2.8,2.0);(3.0,1.6);(3.,1.2);(2.,0.)]
)

Real:
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200.

  [(2.604800,0.873200);(2.623300,1.021200)]
  
  [(3.660456,4.103392);(3.586052,4.019622);(3.534194,3.921630);(3.503842,3.814619);(3.493956,3.703793);(3.502455,3.616438);(3.525869,3.532205);(3.604956,3.374493);(3.744169,3.216318);(3.841524,3.118962);(3.471756,2.749193);(3.398508,2.657733);(3.349194,2.553092);(3.321386,2.440127);(3.312656,2.323692);(3.320288,2.199569);(3.345956,2.079955);(3.393825,1.969360);(3.468056,1.872292);(3.582755,1.757594);(2.772456,0.947292);(3.721504,-0.001759);(3.660456,-0.062807);(3.586052,-0.146578);(3.534194,-0.244570);(3.503842,-0.351581);(3.493956,-0.462407);(3.502455,-0.549762);(3.525869,-0.633995);(3.604956,-0.791707);(3.744169,-0.949882);(3.841524,-1.047238);(3.471756,-1.417007);(3.398508,-1.508467);(3.349194,-1.613107);(3.321386,-1.726073);(3.312656,-1.842507);(3.320288,-1.966631);(3.345956,-2.086245);(3.393825,-2.196840);(3.468056,-2.293907)])
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200.

  [(2.604800,0.873200);(2.623300,1.021200)]
  [(3.629122,4.103392);(3.554717,4.019622);(3.502859,3.921630);(3.472508,3.814619);(3.462622,3.703793);(3.471120,3.616438);(3.494534,3.532205);(3.573622,3.374493);(3.712834,3.216318);(3.810190,3.118962);(3.440422,2.749193);(3.367173,2.657733);(3.317859,2.553092);(3.290052,2.440127);(3.281322,2.323692);(3.288953,2.199569);(3.314622,2.079955);(3.362491,1.969360);(3.436722,1.872292);(3.551420,1.757594);(2.741122,0.947292);(3.690170,-0.001759);(3.629122,-0.062807);(3.554717,-0.146578);(3.502859,-0.244570);(3.472508,-0.351581);(3.462622,-0.462407);(3.471120,-0.549762);(3.494534,-0.633995);(3.573622,-0.791707);(3.712834,-0.949882);(3.810190,-1.047238);(3.440422,-1.417007);(3.367173,-1.508467);(3.317859,-1.613107);(3.290052,-1.726073);(3.281322,-1.842507);(3.288953,-1.966631);(3.314622,-2.086245);(3.362491,-2.196840);(3.436722,-2.293907)])
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200.

  [(2.604800,0.873200);(2.623300,1.021200)]
  [(3.723125,4.103392);(3.648720,4.019622);(3.596863,3.921630);(3.566511,3.814619);(3.556625,3.703793);(3.565123,3.616438);(3.588538,3.532205);(3.667625,3.374493);(3.806837,3.216318);(3.904193,3.118962);(3.534425,2.749193);(3.461177,2.657733);(3.411862,2.553092);(3.384055,2.440127);(3.375325,2.323692);(3.382956,2.199569);(3.408625,2.079955);(3.456494,1.969360);(3.530725,1.872292);(3.645423,1.757594);(2.835125,0.947292);(3.784173,-0.001759);(3.723125,-0.062807);(3.648720,-0.146578);(3.596863,-0.244570);(3.566511,-0.351581);(3.556625,-0.462407);(3.565123,-0.549762);(3.588538,-0.633995);(3.667625,-0.791707);(3.806837,-0.949882);(3.904193,-1.047238);(3.534425,-1.417007);(3.461177,-1.508467);(3.411862,-1.613107);(3.384055,-1.726073);(3.375325,-1.842507);(3.382956,-1.966631);(3.408625,-2.086245);(3.456494,-2.196840);(3.530725,-2.293907)])
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200.

   [(2.749100,0.096200);(2.745400,0.192400);(2.147258,0.790544);(2.035000,1.172900)]
   [(3.627792,2.423500);(4.088418,1.962872);(4.156892,1.750100);(4.685992,-0.033300)])
\hspace(3.0)
\diagram(
  let _ = mediatrice2 env path 200.

[(2.077543,-0.151964);(2.077543,-0.003964);(2.077542,0.851000);(2.077543,0.999000);(2.077543,1.853966);(2.077543,2.001966)]
 (List.rev [(4.588000,-0.710400);(5.389397,0.127766);(5.371475,0.193325);(5.361300,0.384800);(3.148700,2.604800);(3.167200,2.645500)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

   [(2.060900,0.373700);(2.083100,0.521700);(1.909200,0.939800);(2.007250,1.058200)(*;(2.083100,1.198800)*)]
  (List.rev [(4.396525,-0.710400);(5.007025,0.059200);(4.924700,0.144763);(4.859025,0.244200);(5.040325,0.506900);(2.957225,2.604800);(2.975725,2.645500)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

 [(0.546212500000000,0.018037500000000);(0.590554687500000,0.085157812500000);(0.606800000000000,0.166500000000000);(0.590554687500000,0.247842187500000);(0.546212500000000,0.314962500000000);(0.546212500000000,1.324137500000000);(0.590554687500000,1.391257812500000);(0.606800000000000,1.472600000000000);(0.590554687500000,1.553942187500000);(0.546212500000000,1.621062500000000)]
  (List.rev[ (3.111700000000000,0.088800000000000);(3.043712500000000,0.224775000000000);(3.022900000000000,0.377400000000000);(3.300400000000000,0.721500000000000);(3.311037500000000,1.220537500000000);(3.022900000000000,1.661300000000000) ]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

 [(0.546212500000000,0.018037500000000);(0.590554687500000,0.085157812500000);(0.606800000000000,0.166500000000000);(0.590554687500000,0.247842187500000);(0.546212500000000,0.314962500000000);(0.546212500000000,1.324137500000000);(0.590554687500000,1.391257812500000);(0.606800000000000,1.472600000000000);(0.590554687500000,1.553942187500000);(0.546212500000000,1.621062500000000)]
  (List.rev[ (3.111700000000000,0.088800000000000);(3.043712500000000,0.224775000000000);(3.022900000000000,0.377400000000000);(3.300400000000000,0.721500000000000);(3.311037500000000,1.220537500000000);(3.022900000000000,1.661300000000000) ]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

     [(6.293700000000000,-3.159800000000000);(6.301100000000000,-3.145000000000000);(6.290578125000000,-3.118001562500000);(5.793159375000000,-2.604973437500000);(5.707250000000000,-2.394825000000000);(5.642846875000000,-2.159354687500000);(5.598562500000000,-1.902031250000000);(5.573009375000000,-1.626323437500000);(5.564800000000000,-1.335700000000000);(5.564800000000000,0.314500000000000);(5.542542187500000,0.611251562500000);(5.506069726562500,0.781675585937500);(5.445012500000000,0.956912500000000);(5.353603710937500,1.129547851562500);(5.226076562499999,1.292167187500000);(5.226076562499999,1.823232812500000);(5.353603710937500,1.985852148437500);(5.445012500000000,2.158487500000000);(5.506069726562500,2.333724414062500);(5.542542187500000,2.504148437500000);
(5.564800000000000,2.800900000000000);
(5.564800000000000,4.451100000000000);
(5.573068994140625,4.749177636718750);
(5.596437890625000,5.009771093750000);
(5.632749560546875,5.235633691406250);
(5.679846875000000,5.429518750000001);
(5.735572705078125,5.594179589843750);
(5.797769921875000,5.732369531250001);
(6.269462109375000,6.215335156250000);(6.301100000000000,6.264100000000000)]
 (List.rev [(8.459083447265625,-0.710400000000000);(9.132483447265624,0.125800000000000);
(7.019783447265625,2.604800000000000);
(7.038283447265625,2.645500000000000)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

 [(5.716500,-3.148700);(5.772000,-2.948900);(5.560890,-2.509684);(5.388761,-2.027022);(5.252273,-1.504643);(5.148088,-0.946275);(5.072866,-0.355648);(5.023270,0.263509);(4.995961,0.907468);(4.987600,1.572500);(4.995961,2.237532);(5.023270,2.881491);(5.072866,3.500648);(5.148088,4.091275);(5.252273,4.649643);(5.388761,5.172022);(5.560890,5.654684);(5.772000,6.093900);(5.716500,6.293700)]
  (List.rev [(9.076273,-0.604372);(8.931338,-0.443075);(8.819008,-0.288716);(8.720900,-0.118400);(8.603772,0.138692);(8.519250,0.409313);(8.468028,0.691727);(8.450800,0.984200);(8.477444,1.342789);(8.549486,1.654420);(8.655088,1.921738);(8.782412,2.147388);(8.919623,2.334013);(9.054883,2.484261)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(6.293700,-3.159800);(6.301100,-3.145000);(6.290578,-3.118002);(5.793159,-2.604973);(5.707250,-2.394825);(5.642847,-2.159355);(5.598562,-1.902031);(5.573009,-1.626323);(5.564800,-1.335700);(5.564800,0.314500);(5.542542,0.611252);(5.506070,0.781676);(5.445012,0.956912);(5.353604,1.129548);(5.226077,1.292167);(5.226077,1.823233);(5.353604,1.985852)
;(5.445012,2.158488);(5.506070,2.333724);(5.542542,2.504148);(5.564800,2.800900);(5.564800,4.451100);(5.573069,4.749178);(5.596438,5.009771);(5.632750,5.235634);(5.679847,5.429519);(5.735573,5.594180);(5.797770,5.732370);(6.269462,6.215335);(6.301100,6.264100)]
  (List.rev [(8.160335,-0.364045);(8.073758,-0.157998);(7.003761,0.925000);(8.073758,2.008000);(8.160335,2.214047)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

  [(1.365184,-0.729120);(0.666336,0.945350);(1.365184,2.619820)]
  (List.rev [(3.521726,-0.725200);(3.642901,-0.551763);(3.736326,-0.381100);(3.765926,-0.225700);(3.754364,-0.143838);(3.717826,-0.070300);(3.458826,0.236800);(3.432926,0.333000);(3.461601,0.406537);(3.518026,0.466200)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.

  [(5.513463,0.190088);(5.631400,0.329300);(5.631400,0.370000);(5.109700,1.450400);(5.099525,1.570188);(5.081603,1.626786);(5.050500,1.676100);(5.092125,2.163112);(5.140341,2.228614);(5.161500,2.312500);(5.147972,2.392859);(5.108775,2.461425)]
  (List.rev [ 
(6.603494,-0.725200);
(6.724669,-0.551763);
(6.818094,-0.381100);
(6.847694,-0.225700);
(6.836131,-0.143838);
(6.799594,-0.070300);
(6.540594,0.236800);
(6.514694,0.333000);(6.543369,0.406537);(6.599794,0.466200)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
 [(50.934200,0.292300);(50.908300,0.347800);(50.749200,1.498500);(50.778800,1.594700);(50.305200,2.242200)]
 (List.rev [(52.801211,-0.657828);(52.801211,-0.572505);(52.814337,-0.556096);(53.273772,-0.027746);(53.273772,2.036428);(52.814337,2.564778);(52.801211,2.581186);(52.801211,2.666510)]))
\diagram(
   let _ = mediatrice2 env path 200.
[(*(2.060900,0.373700);(2.083100,0.521700);(1.909200,0.939800);(2.007250,1.058200);*)(2.083100,1.198800)]
  (List.rev [(*(4.396525,-0.710400);(5.007025,0.059200);(4.924700,0.144763);*)(4.859025,0.244200);(5.040325,0.506900);(2.957225,2.604800);(*(2.975725,2.645500)*)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(0.000000,-4.942945);(-1.495800,-3.327300);(-1.349188,-3.102062);(-1.299700,-2.835200);(-1.330688,-2.607650);(-1.447700,-2.413400);(-1.606800,-1.939800);(-1.487013,-1.752950);(-1.447700,-1.532800);(0.000000,0.000000);(-3.687458,3.823100);(-2.239758,5.355900)]
(List.rev [(1.124389,-0.525400);(1.124389,-0.488400);(1.416689,-0.040700);(1.298289,0.218300);(1.305689,0.270100) ]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(1.065600,-0.654900);(1.065600,-0.558700);(1.050800,-0.540200);(1.050800,2.553000);(1.065600,2.571500);(1.065600,2.667700)]
[(1.740850,1.480000);(1.803750,1.398600);(2.218150,0.950900);(2.490100,0.428737);(2.184850,0.003700)])
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(3.121380,0.081400);(3.110280,1.598400);(2.792080,2.094200);(2.776933,2.159817);(3.136180,2.590000);(3.113980,2.634400)]
[(3.845821,2.664000);(3.845821,2.567800);(3.860621,2.549300);(3.860621,-0.543900);(3.845821,-0.562400);(3.845821,-0.658600)])
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(6.293700,-3.159800);(6.301100,-3.145000);(6.290578,-3.118002);(5.816565,-2.643986);(5.793159,-2.604973);(5.707250,-2.394825);(5.642847,-2.159355);(5.598562,-1.902031);(5.573009,-1.626323);(5.564800,-1.335700);(5.242900,-1.013799);(5.564800,0.314500);(5.542542,0.611252);(5.506070,0.781676);(5.445012,0.956912);(5.353604,1.129548);(5.226077,1.292167);(5.007247,1.604403);(5.226077,1.823233);(5.353604,1.985852);(5.445012,2.158488);(5.506070,2.333724);(5.542542,2.504148);(5.564800,2.800900);(5.242900,3.122801);(5.242900,4.129199);(5.564800,4.451100);(5.573069,4.749178);(5.596438,5.009771);(5.632750,5.235634);(5.679847,5.429519);(5.625380,5.483986);(5.735573,5.594180);(5.797770,5.732370);(5.818700,5.764571);(6.269462,6.215335);(6.301100,6.264100)]
(List.rev[ (10.156615,-0.364045);(10.070038,-0.157998);(10.054900,-0.129864);(9.000041,0.925000);(10.054899,1.979862);(10.070038,2.008000);(10.216350,2.154312);(10.156615,2.214047)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[ (0.407000,-0.777000);(0.593388,-0.541125);(0.710400,-0.355200);(0.767750,-0.231712);(0.791800,-0.099900);(0.785325,-0.004162);(0.762200,0.088800);(0.685425,0.270563);(0.592000,0.444000)]
(List.rev[ (3.696300,0.277500);(3.715725,0.589225);(3.718500,0.906500);(3.716163,1.086436);(3.392900,1.409700)]))
\hspace(3.0)
\diagram(
   let f (x,y) = (x -. 18., y)
   let g = List.map f
   let _ = mediatrice2 env path 200.
(g [(18.158523,-0.685733);(18.151123,0.325600);(18.168390,0.986667);(18.153590,1.016267)])
(g (List.rev [(20.378858,-0.003700);(20.378858,0.096200);(20.724806,0.442149);(20.060658,1.106300);(20.012269,1.164112);(19.976021,1.230250);(19.927458,1.376400);(19.876121,1.608575);(19.849758,1.846300);(19.431658,2.345800);(19.405758,2.427200)])))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
 [(0.011100,0.081400);(0.000000,1.598400);(0.025900,2.590000);(0.003700,2.634400)]
(List.rev [ (1.786291,0.140600);(1.760391,0.181300);(1.915791,0.447700);(2.450439,0.982350);(2.156291,1.276500);(2.159991,1.372700);(2.483739,1.696450);(2.011991,2.168200);(1.960191,2.249600)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(0.00000000000000000000,-0.68080000000000007176);(0.02953508771929946874,-0.63813820662768039327);(0.00369188596491376586,-0.36657948343079932441);(0.00000000000000000000,-0.03102807017543879331);(0.00000000000000000000,2.03314639376218275757);(0.00369188596491376586,2.36869780701754351071);(0.02953508771929946874,2.64025653021442474611);(0.00000000000000000000,2.68291832358674442460)]
(List.rev [(1.05340366293120268892,-0.68080004077265154905);(1.03120370370370295632,-0.65860000000000007425);(1.03120370370370295632,-0.56240000000000001101);(1.04600370370370399087,-0.54389999999999993907);(1.43839803514419095620,-0.15150422721200440535);(1.04600370370370399087,2.54930000000000012150);(1.03120370370370295632,2.56780000000000008242);(1.03120370370370295632,2.66400000000000014566);(1.05340366293120268892,2.68620004077265184250)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(0.19813570789745726941,-0.69560000000000010711);
 (0.00000000000000000000,-0.49746356430811278226);
 (0.00122979489861396729,-0.47317511506048870462);
 (0.69146904123079044879,0.21706666666666663001);
 (0.67420237456412346333,0.29969999999999991092);
 (0.63473570789745714649,0.36753333333333315647)]
(List.rev [
 (2.15509124175162414261,0.01803749999999999798);
 (2.10907249175162414545,0.08515781250000001301);
(2.09219124175162418666,0.16650000000000000910);
(2.10907249175162414545,0.24784218750000003295);
(2.15509124175162414261,0.31496250000000003411);
(2.65967688830164794567,0.81955000000000011173);
(2.15509124175162414261,1.32413750000000018936);
(2.10907249175162414545,1.39125781250000013500);
(2.09219124175162418666,1.47260000000000013110);
(2.10907249175162414545,1.55394218750000012719);
(2.15509124175162414261,1.62106250000000007283)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(0.95460000000000011511,0.05920000000000000262);
(0.95460000000000011511,0.11840000000000000524);
(0.23448749999999995985,0.99530000000000007354);
(0.06989531249999991758,1.26724999999999998757);
(0.00000000000000000000,1.40599999999999991651);
(0.24790000000000000924,1.72419999999999995488);
(0.93979999999999996874,2.48640000000000016556);
(0.93979999999999996874,2.54190000000000004832)]
(List.rev [
(2.55300000000000082423,0.00000000000000000000);
(2.55300000000000082423,0.05919999999999991935);
(3.55570000000000074891,1.27649999999999996803);
(3.34572500000000072617,1.61736250000000003624);
(3.25162323062377867089,1.78037448859365343701);
(2.63070000000000048246,2.40129999999999999005);
(2.63070000000000048246,2.49380000000000023874)]))
\hspace(3.0)
\diagram(
   let _ = mediatrice2 env path 200.
[(0.000000,-4.942945);(-1.495800,-3.327300);(-1.349188,-3.102062);(-1.299700,-2.835200);(-1.330688,-2.607650);(-1.447700,-2.413400);(-1.606800,-1.939800);(-1.487013,-1.752950);(-1.447700,-1.532800);(0.000000,0.000000);(-3.687458,3.823100);(-2.239758,5.355900)]
(List.rev [(1.124389,-0.525400);(1.124389,-0.488400);(1.416689,-0.040700);(1.298289,0.218300);(1.305689,0.270100) ]))

== Test ajustement ==


\Caml(
let testBeta beta a = [Scope(
                    fun _ _-> Env (fun env-> { env with
		      mathsEnvironment = Array.map (fun e -> {
			e with
			  optical_beta = beta
		      }) env.mathsEnvironment;})::a
                  )])


\Caml(
let beta=0.4
)

(*
[$ {{<} < {>}} < {{>} > {>}} $]
*)
[$\testBeta(beta){ 1 + {2 \over uₙ}}$]

[$\testBeta(beta){ 1 + {8 \over 8}}$]

$\testBeta(beta){A A V(a)}$ $\testBeta(0.00){A A V(a)}$

$\testBeta(beta){A × V(a)}$ $\testBeta(0.00){A × V(a)}$

$\testBeta(beta){A + V(a)}$ $\testBeta(0.00){A + V(a)}$

$\testBeta(beta){A - V(a)}$ $\testBeta(0.00){A - V(a)}$

$\testBeta(beta){A ∧ V(a)}$ $\testBeta(0.00){A ∧ V(a)}$

$\testBeta(beta){A ∨ V(a)}$ $\testBeta(0.00){A ∨ V(a)}$

$\testBeta(0.00){{β = 0.0} > {<}}$

$\testBeta(0.00){{β = 0.0} < {>}}$

$\testBeta(0.10){{β = 0.1} > {<}}$

$\testBeta(0.10){{β = 0.1} < {>}}$

$\testBeta(0.20){{β = 0.2} > {<}}$

$\testBeta(0.20){{β = 0.2} < {>}}$

$\testBeta(0.30){{β = 0.3} > {<}}$

$\testBeta(0.30){{β = 0.3} < {>}}$

$\testBeta(0.4){{β = 0.4} > {<}}$

$\testBeta(0.4){{β = 0.4} < {>}}$

$\testBeta(0.5){{β = 0.5} > {<}}$

$\testBeta(0.5){{β = 0.5} < {>}}$

$\testBeta(0.6){{β = 0.6} > {<}}$

$\testBeta(0.6){{β = 0.6} < {>}}$

$\testBeta(0.70){{β = 0.7} > {<}}$

$\testBeta(0.70){{β = 0.7} < {>}}$

$\testBeta(0.80){{β = 0.8} > {<}}$

$\testBeta(0.80){{β = 0.8} < {>}}$

$\testBeta(0.00){{β = 0.0} ⟨t⟩ (t)}$

$\testBeta(0.10){{β = 0.1} ⟨t⟩ (t)}$

$\testBeta(0.20){{β = 0.2} ⟨t⟩ (t)}$

$\testBeta(0.30){{β = 0.3} ⟨t⟩ (t)}$

$\testBeta(0.40){{β = 0.4} ⟨t⟩ (t)}$

$\testBeta(0.50){{β = 0.5} ⟨t⟩ (t)}$

$\testBeta(0.60){{β = 0.6} ⟨t⟩ (t)}$

$\testBeta(0.70){{β = 0.7} ⟨t⟩ (t)}$

$\testBeta(0.80){{β = 0.8} ⟨t⟩ (t)}$

$\testBeta(0.90){{β = 0.9} ⟨t⟩ (t)}$
